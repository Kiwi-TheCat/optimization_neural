% Load from one folder above the current directory
load('../training/weights_log_tensor_3.mat', 'weights_log', 'x_test_log');
load('../training/loss_all_log_3.mat', 'all_loss', 'final_loss');
load('preprocessed_full_data.mat', 'X_train', 'X_original', 'mean_X', 'std_X');

x_validation = X_train(385:,);

% Reconstruct optimizer list and epoch count from data
optimizers = {weights_log.optimizer};
num_epochs = size(all_loss, 1);
fixed_weights = false;
% Extract the final x_train and x_test for each optimizer (e.g., for the last optimizer)
o = numel(optimizers); % or whichever you want to visualize
fieldname = 'We1'; % 'We1', 'We_latent', 'Wd1', 'Wd_output'
if fixed_weights
    % Extract weight dimensions
    W0 = weights_log(o).epoch(1).(fieldname);
    total_elements = numel(W0);
    % Generate reproducible random indices
    num_updates = 200;
    rng(42);
    update_indices = randperm(total_elements, num_updates);
end
% Call visualization functions
%plot_training_comparison(all_loss, optimizers, num_epochs);
%plot_final_mse(final_loss, optimizers);

visualize_weight_animation(weights_log, x_test_log, update_indices);
%visualize_weight_static(weights_log, x_test_log);
%visualize_weight_evolution(weights_log, x_test_log);
%plot_weight_evolution(weights_log, fieldname, update_indices) 
